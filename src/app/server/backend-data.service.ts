import {Course} from '../models/course';
import {BackendUser} from './backend.user';
import {Author} from '../models/author';

export class BackendDataService {
    users: BackendUser[];
    courses: Course[];
    authors: Author[];
    courseSeed: number;

    constructor() {
        //noinspection TsLint
        this.users = [
            new BackendUser(1, 'q', 'q', ''),

            new BackendUser(2, 'user', 'password', '')
        ];

        this.authors = [
            new Author({ id: 1, name: 'Smith' }),
            new Author({ id: 2, name: 'Johnson' }),
            new Author({ id: 3, name: 'Williams' }),
            new Author({ id: 4, name: 'Miller' }),
            new Author({ id: 5, name: 'Brown' })
        ];

        //noinspection TsLint
        this.courses = [
            new Course({
                id: 1, title: 'Course 1',
                description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer venenatis mi vel venenatis sollicitudin. Nullam viverra mattis ipsum. Sed finibus est ac odio volutpat aliquet. Proin ac tellus accumsan, mattis ligula quis, ultricies purus. Nullam faucibus, sem semper cursus consectetur, urna purus varius turpis, sit amet sollicitudin orci urna a quam. Sed placerat elementum dolor, vel auctor urna pellentesque et. Pellentesque condimentum gravida mi nec fermentum. Donec vel facilisis neque. Mauris lacinia urna nec risus pretium lacinia. Fusce suscipit vehicula magna, non lobortis libero blandit eget. Sed ac semper diam. Curabitur et nisl gravida, interdum mauris et, molestie magna. In diam erat, auctor nec elit non, posuere euismod sem. In non sagittis neque. Nam in felis ex. Duis tincidunt dignissim velit, id finibus augue convallis nec.',
                createDate: new Date(2016, 0, 2),
                duration: 183,
                authors: [this.authors[0], this.authors[3]]
            })
        ];
        this.courseSeed = this.courses.length + 1;
    }

    getUser(login: string, password: string): BackendUser {
        let items: BackendUser[] = this.users.filter(user => user.login === login && user.password === password);
        if (items != null && items.length > 0) {
            return items[0];
        }
        return null;
    }

    getCourses(): Course[] {
        return this.courses.slice(0);
    }

    addCourse(course: Course): Course {
        course.id = this.courseSeed++;
        this.courses.push(course);

        return course;
    }

    getCourse(id: number): Course {
        let items: Course[] = this.courses.filter(course => course.id === id)
        if (items != null && items.length > 0) {
            return items[0];
        }
        return null;
    }

    updateCourse(id: number, source: Course) {
        let course = this.getCourse(id);
        course = Object.assign({}, course, source);
    }

    deleteCourse(id: number) {
        this.courses = this.courses.filter(course => course.id !== id);
    }

    getAuthors(): Author[] {
        return this.authors.slice(0);
    }
}
